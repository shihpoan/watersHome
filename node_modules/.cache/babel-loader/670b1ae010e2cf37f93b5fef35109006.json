{"ast":null,"code":"var _jsxFileName = \"/Users/shihpoan/Desktop/react_Study/wsgood/src/ProgressDIY2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, useReducer } from 'react'; //引入useState、useEffect、useRef，不用引入component(2)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProgressDIY = props => {\n  _s();\n\n  //做好ProgressDIY.js的基本架構(1)\n  //用useState建立控制目前的寬度的state和setState函式(3)\n  const [percent, setPercent] = useState(10); //在useEffect中，搭配useRef去紀錄是否為第一次渲染，讓第一次和非第一次渲染可以做不同的事。(5)\n\n  const mounted = useRef(); //創建用來存setTimeout的變數(7)\n\n  const tm = useRef();\n  const tmTwo = useRef();\n  useEffect(() => {\n    if (!mounted.current) {\n      //componentDidMount\n      setPercent(props.value); //在第一次渲染的定義區中完成初始化(6)\n\n      mounted.current = true;\n    } else {\n      //componentDidUpdate}\n      if (percent > props.value) {\n        if (tm.current) clearTimeout(tm.current);\n        tmTwo.current = setTimeout(() => {\n          setPercent(percent - 1);\n        }, 20);\n      } else if (percent < props.value) {\n        if (tmTwo.current) clearTimeout(tmTwo.current);\n        tm.current = setTimeout(() => {\n          setPercent(percent + 1);\n        }, 20);\n      }\n    }\n  }, [props.value, percent]);\n  return (\n    /*#__PURE__*/\n    // 在return()中弄出進度條跟按鍵的元素(4)\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-back\",\n        style: {\n          backgroundColor: 'rgba(0,0,0,0.2)',\n          width: '200px',\n          height: '7px',\n          borderRadius: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          style: {\n            backgroundColor: 'aqua',\n            width: percent.toString() + '%',\n            height: '100%',\n            borderRadius: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), \"\\u76EE\\u524D\\u6BD4\\u7387: \", percent, \"%\", /*#__PURE__*/_jsxDEV(\"button\", {\n        value: 90,\n        onClick: props.onClick,\n        children: \"\\u589E\\u52A0\\u6BD4\\u7387\\u81F390\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        value: 10,\n        onClick: props.onClick,\n        children: \"\\u6E1B\\u5C11\\u6BD4\\u7387\\u81F310\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(ProgressDIY, \"RqaqkyvK9wlR+BszgmVhJKXNj5Q=\");\n\n_c = ProgressDIY;\nexport default ProgressDIY;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProgressDIY\");","map":{"version":3,"sources":["/Users/shihpoan/Desktop/react_Study/wsgood/src/ProgressDIY2.js"],"names":["React","useState","useEffect","useRef","useReducer","ProgressDIY","props","percent","setPercent","mounted","tm","tmTwo","current","value","clearTimeout","setTimeout","backgroundColor","width","height","borderRadius","toString","onClick"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,EAA4CC,UAA5C,QAA6D,OAA7D,C,CAAsE;;;;AACtE,MAAMC,WAAW,GAAEC,KAAD,IAAS;AAAA;;AAAE;AACzB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAsBP,QAAQ,CAAC,EAAD,CAApC,CAFuB,CAIvB;;AACA,QAAMQ,OAAO,GAACN,MAAM,EAApB,CALuB,CAMvB;;AACA,QAAMO,EAAE,GAAGP,MAAM,EAAjB;AACA,QAAMQ,KAAK,GAAGR,MAAM,EAApB;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACV,QAAG,CAACO,OAAO,CAACG,OAAZ,EAAoB;AAAE;AAClBJ,MAAAA,UAAU,CAACF,KAAK,CAACO,KAAP,CAAV,CADgB,CACS;;AACzBJ,MAAAA,OAAO,CAACG,OAAR,GAAgB,IAAhB;AACH,KAHD,MAII;AAAE;AACF,UAAGL,OAAO,GAACD,KAAK,CAACO,KAAjB,EAAuB;AACnB,YAAGH,EAAE,CAACE,OAAN,EACIE,YAAY,CAACJ,EAAE,CAACE,OAAJ,CAAZ;AACJD,QAAAA,KAAK,CAACC,OAAN,GAAcG,UAAU,CAAC,MAAI;AAACP,UAAAA,UAAU,CAACD,OAAO,GAAC,CAAT,CAAV;AAAsB,SAA5B,EAA6B,EAA7B,CAAxB;AACH,OAJD,MAKK,IAAGA,OAAO,GAACD,KAAK,CAACO,KAAjB,EAAuB;AACxB,YAAGF,KAAK,CAACC,OAAT,EACIE,YAAY,CAACH,KAAK,CAACC,OAAP,CAAZ;AACJF,QAAAA,EAAE,CAACE,OAAH,GAAWG,UAAU,CAAC,MAAI;AAACP,UAAAA,UAAU,CAACD,OAAO,GAAC,CAAT,CAAV;AAAsB,SAA5B,EAA6B,EAA7B,CAArB;AACH;AAEJ;AACJ,GAlBQ,EAkBP,CAACD,KAAK,CAACO,KAAP,EAAaN,OAAb,CAlBO,CAAT;AAqBA;AAAA;AACI;AACA;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,QAAA,KAAK,EAAE;AAACS,UAAAA,eAAe,EAAC,iBAAjB;AAAoCC,UAAAA,KAAK,EAAC,OAA1C;AAAmDC,UAAAA,MAAM,EAAC,KAA1D;AAAiEC,UAAAA,YAAY,EAAC;AAA9E,SAAtC;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,cAAf;AAA8B,UAAA,KAAK,EAAE;AAACH,YAAAA,eAAe,EAAC,MAAjB;AAAyBC,YAAAA,KAAK,EAACV,OAAO,CAACa,QAAR,KAAmB,GAAlD;AAAuDF,YAAAA,MAAM,EAAC,MAA9D;AAAsEC,YAAAA,YAAY,EAAC;AAAnF;AAArC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,gCAIWZ,OAJX,oBAKI;AAAQ,QAAA,KAAK,EAAE,EAAf;AAAmB,QAAA,OAAO,EAAED,KAAK,CAACe,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAQ,QAAA,KAAK,EAAE,EAAf;AAAmB,QAAA,OAAO,EAAEf,KAAK,CAACe,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAWH,CA1CD;;GAAMhB,W;;KAAAA,W;AA2CN,eAAeA,WAAf","sourcesContent":["import React,{ useState, useEffect, useRef, useReducer} from 'react'; //引入useState、useEffect、useRef，不用引入component(2)\nconst ProgressDIY=(props)=>{ //做好ProgressDIY.js的基本架構(1)\n    //用useState建立控制目前的寬度的state和setState函式(3)\n    const [percent, setPercent]=useState(10);\n\n    //在useEffect中，搭配useRef去紀錄是否為第一次渲染，讓第一次和非第一次渲染可以做不同的事。(5)\n    const mounted=useRef();\n    //創建用來存setTimeout的變數(7)\n    const tm = useRef();\n    const tmTwo = useRef();\n\n    useEffect(()=>{ \n        if(!mounted.current){ //componentDidMount\n            setPercent(props.value); //在第一次渲染的定義區中完成初始化(6)\n            mounted.current=true;\n        }\n        else{ //componentDidUpdate}\n            if(percent>props.value){\n                if(tm.current)\n                    clearTimeout(tm.current)\n                tmTwo.current=setTimeout(()=>{setPercent(percent-1)},20);\n            }\n            else if(percent<props.value){\n                if(tmTwo.current)\n                    clearTimeout(tmTwo.current)\n                tm.current=setTimeout(()=>{setPercent(percent+1)},20);\n            }\n\n        }\n    },[props.value,percent]);\n\n\n    return(\n        // 在return()中弄出進度條跟按鍵的元素(4)\n        <div>\n            <div className=\"progress-back\" style={{backgroundColor:'rgba(0,0,0,0.2)', width:'200px', height:'7px', borderRadius:'10px'}}>\n                <div className='progress-bar' style={{backgroundColor:'aqua', width:percent.toString()+'%', height:'100%', borderRadius:'10px'}}></div>\n            </div>\n            目前比率: {percent}%\n            <button value={90} onClick={props.onClick}>增加比率至90</button>\n            <button value={10} onClick={props.onClick}>減少比率至10</button>\n        </div>\n    )\n}\nexport default ProgressDIY;"]},"metadata":{},"sourceType":"module"}